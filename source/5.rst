用户身份与文件权限
======================

5.1 用户身份与能力
---------------------
管理员UID为0：系统的管理员用户。

系统用户UID为1～999： Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器，默认服务程序会有独立的系统用户负责运行，进而有效控制被破坏范围。

普通用户UID从1000开始：是由管理员创建的用于日常工作的用户。
：：

在Linux系统中创建每个用户时，将自动创建一个与其同名的基本用户组，而且这个基本用户组只有该用户一个人。
如果该用户以后被归纳入其他用户组，则这个其他用户组称之为扩展用户组。
一个用户只有一个基本用户组，但是可以有多个扩展用户组。


useradd
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

useradd命令用于创建新的用户，格式为“useradd [选项] 用户名”。
useradd命令中的用户参数以及作用

=====  ============================
参数	作用
=====  ============================
-d	   指定用户的家目录（默认为/home/username）
-e	   账户的到期时间，格式为YYYY-MM-DD.
-u	   指定该用户的默认UID
-g     指定一个初始的用户基本组（必须已存在）
-G	   指定一个或多个扩展用户组
-N	   不创建与用户同名的基本用户组
-s	   指定该用户的默认Shell解释器
=====  ============================

usermod
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
usermod命令用于修改用户的属性，格式为“usermod [选项] 用户名”。

::

用户的信息保存在/etc/passwd文件中，可以直接用文本编辑器来修改其中的用户参数项目，
也可以用usermod命令修改已经创建的用户信息，
诸如用户的UID、基本/扩展用户组、默认终端等。



=====  ============================
参数	作用
=====  ============================
-c     填写用户账户的备注信息
-d -m  参数-m与参数-d连用，可重新指定用户的家目录并自动把旧的数据转移过去
-e	   账户的到期时间，格式为YYYY-MM-DD
-g	   变更所属用户组
-G	   变更扩展用户组
-L	   锁定用户禁止其登录系统
-U	   解锁用户，允许其登录系统
-s	   变更默认终端
-u	   修改用户的UID
=====  ============================


id
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
id 用户名
id命令可以查看用户信息

passwd
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
passwd命令用于修改用户密码、过期时间、认证信息等，格式为“passwd [选项] [用户名]”。
::

普通用户只能使用passwd命令修改自身的系统密码，而root管理员则有权限修改其他所有人的密码。
更酷的是，root管理员在Linux系统中修改自己或他人的密码时不需要验证旧密码，这一点特别方便。
既然root管理员可以修改其他用户的密码，就表示完全拥有该用户的管理权限。

passwd命令中可用的参数以及作用
        -a, --all
            此选项只能和 -S 一起使用，来显示所有用户的状态。

        -d, --delete
            删除用户密码(让它为空)。这是禁用一个用户密码的快速方法。它将设置给出名称的账户。

        -e, --expire
            让一个账户的密码立即过期。这可以强制一个用户下次登录时更改密码。

        -h, --help
            现实帮助信息并退出。

        -i, --inactive INACTIVE
            ::

            此选项用于在密码过期一定天数之后禁用账户。
            一个用户账户密码已经过期 INACTIVE 天之后，用户将
            不能再登录进账户。
        
        -k, --keep-tokens
            表示密码更改只应该因为认证口令(密码)过期更改。
            用户希望保持他们尚未过期的口令。

        -l, --lock
            ::

            锁定指定账户的密码。此选项通过将密码更改为一个不可能与加密值匹配的值来禁用(它在密码开头添
            加一个“!”)。
            注意，这并没有禁用此账户。用户仍然可以通过其它认证方式(如 SSH 密码)来登录。要禁用此账
            户，管理员需要使用 usermod --expiredate 1 (设置账户的过期时间为1970年1月2日)。
            被锁定了密码的用户不允许更改密码。

        -n, --mindays MIN_DAYS
           在密码更改之间的最小天数设置为 MIN_DAYS。
           此字段中的 0 值表示用户可以在任何时间更改其密码。

        -q, --quiet
           安静模式。

        -r, --repository REPOSITORY
           在 REPOSITORY 中更改密码

        -R, --root CHROOT_DIR
           Apply changes in the CHROOT_DIR directory and use the configuration files from the
           CHROOT_DIR directory.

        -S, --status
            ::

            显示账户状态信息。状态信息包含 7 个字段。首个字段是用户的登录名，第二个字段表示用户账户是
            否已经锁定密码(L)、没有密码 (NP)或者密码可用(P)，第三个字段给出最后一次更改密码的日期。接
            下来的四个字段分别是密码的最小年龄、最大年龄、警告期和禁用期。这些年龄以天为单位计算。

        -u, --unlock
            解锁指定用户的密码。此操作通过将密码改回先前值(改回使用 -l 之前的值)重新启用密码。

        -w, --warndays WARN_DAYS
            设置在要求更改密码之前警告的天数。WARN_DAYS 选项是在密码过期之前提前警告的天数。

        -x, --maxdays MAX_DAYS
            设置密码仍然有效的最大天数。MAX_DAYS 之后，密码会要求更改。

userdel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
userdel命令用于删除用户，格式为“userdel [选项] 用户名”。
::

如果我们确认某位用户后续不再会登录到系统中，则可以通过userdel命令删除该用户的所有信息。
在执行删除操作时，该用户的家目录默认会保留下来，此时可以使用-r参数将其删除

userdel命令的参数以及作用

    -f       强制删除用户
    -r	     同时删除用户及用户家目录

5.2 文件权限与归属
---------------------
尽管在Linux系统中一切都是文件，但是每个文件的类型不尽相同，因此Linux系统使用了不同的字符来加以区分，常见的字符如下所示。

-： 普通文件。

d： 目录文件。

l： 链接文件。

b： 块设备文件。

c： 字符设备文件。

p：管道文件。
::

文件的读、写、执行权限可以简写为rwx，亦可分别用数字4、2、1来表示，
文件所有者，所属组及其他用户权限之间无关联

5.3 文件的特殊权限
---------------------
::
在复杂多变的生产环境中，单纯设置文件的rwx权限无法满足我们对安全和灵活性的需求，
因此便有了SUID、SGID与SBIT的特殊权限位。
这是一种对文件权限进行设置的特殊功能，可以与一般权限同时使用，以弥补一般权限不能实现的功能。

SUID
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SUID是一种对二进制程序进行设置的特殊权限，
可以让二进制程序的执行者临时拥有属主的权限（仅对拥有执行权限的二进制程序有效）

 | 命令：chmod u+s
 | rwx+s=rws
 | rw-+s=rwS

SGID
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SGID主要实现如下两种功能：

 | 让执行者临时拥有属组的权限（对拥有执行权限的二进制程序进行设置）；

 | 在某个目录中创建的文件自动继承该目录的用户组（只可以对目录进行设置）


 | 命令：chmod g+s
 | rwx+g=rws
 | rw-+g=rwS

chmod
>>>>>>>>>>>>>>>>>>
chmod命令是一个非常实用的命令，能够用来设置文件或目录的权限
格式为“chmod [参数] 权限 文件或目录名称”。


chown
>>>>>>>>>>>>>>>>>>
chown设置文件或目录的所有者和所属组
格式为“chown [参数] 所有者:所属组 文件或目录名称”。


针对目录进行操作时需要加上大写参数-R来表示递归操作，即对目录内所有的文件进行整体操作。

SBIT
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
::

置SBIT（Sticky Bit）特殊权限位了（也可以称之为特殊权限位之粘滞位）。
SBIT特殊权限位可确保用户只能删除自己的文件，而不能删除其他用户的文件。
换句话说，当对某个目录设置了SBIT粘滞位权限后，那么该目录中的文件就只能被其所有者执行删除操作了。

 | 命令：chmod o+t
 | rwx+t=rwt
 | rw-+t=rwT

文件能否被删除并不取决于自身的权限，而是看其所在目录是否有写入权限

5.4 文件的隐藏属性
---------------------
::

Linux系统中的文件除了具备一般权限和特殊权限之外，
还有一种隐藏权限，即被隐藏起来的权限，默认情况下不能直接被用户发觉。
当遇到明明权限充足但却无法删除某个文件，
或者仅能在日志文件中追加内容而不能修改或删除内容，可能文件具有掩藏权限


chattr
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
::

chattr命令用于设置文件的隐藏权限，格式为“chattr [参数] 文件”。
如果想要把某个隐藏功能添加到文件上，则需要在命令后面追加“+参数”，
如果想要把某个隐藏功能移出文件，则需要追加“-参数”。

chattr命令中用于隐藏权限的参数及其作用
=====  ============================
参数	作用
=====  ============================
i	   无法对文件进行修改；若对目录设置了该参数，则仅能修改其中的子文件内容而不能新建或删除文件
a	   仅允许补充（追加）内容，无法覆盖/删除内容（Append Only）
=====  ============================

lsattr
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
::

lsattr命令用于显示文件的隐藏权限，格式为“lsattr [参数] 文件”。
在Linux系统中，文件的隐藏权限必须使用lsattr命令来查看，平时使用的ls之类的命令则看不出端倪

5.5 文件访问控制列表
---------------------
::

一般权限、特殊权限、隐藏权限其实有一个共性—权限是针对某一类用户设置的。
如果希望对某个指定的用户进行单独的权限控制，就需要用到文件的访问控制列表（ACL）了。
通俗来讲，基于普通文件或目录设置ACL其实就是针对指定的用户或用户组设置文件或目录的操作权限。
另外，如果针对某个目录设置了ACL，则目录中的文件会继承其ACL；
若针对文件设置了ACL，则文件不再继承其所在目录的ACL。

setfacl
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
::

setfacl命令用于管理文件的ACL规则，格式为“setfacl [参数] 文件名称”。
文件的ACL提供的是在所有者、所属组、其他人的读/写/执行权限之外的特殊权限控制，
使用setfacl命令可以针对单一用户或用户组、单一文件或目录来进行读/写/执行权限的控制。
其中，针对目录文件需要使用-R递归参数；
针对普通文件则使用-m参数；
如果想要删除某个文件的ACL，则可以使用-b参数

 | 如果查看文件权限，发现最后一个点(.)变成了加号(+)，则说明该文件设置了ACL

getfacl
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
getfacl命令用于显示文件上设置的ACL信息，格式为“getfacl 文件名称”。


5.6 su命令与sudo服务
---------------------
区别：

    su是命令
    sudo是服务，可以只针对某一个命令

sudo命令可以把特定命令的执行权限赋予给指定用户
sudo命令用于给普通用户提供额外的权限来元辰个原本root管理员才能完成的任务

sudo命令用于给普通用户提供额外的权限来完成原本root管理员才能完成的任务，格式为“sudo [参数] 命令名称”。

